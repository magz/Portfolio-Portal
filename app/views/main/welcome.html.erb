<% content_for :head do %>

.main_table {
  border: 0px;
  background-color: #FFFFFF;
  width: 900px;
  cell-padding: 3;
  cell-spacing: 3;
}
 
.scrollArea {
width: 500px; 
height: 250px;
padding-left: 5px;
padding-right: 5px; 
border-color: #6699CC;
border-width: 1px; 
border-style: solid;
float: left; 
overflow: auto;
}



<% end %>
  <% if @twitter_check %>
    <%= image_tag "frown.gif", :size => "50x50", :align => "left" %>
  <% else %>
    <%= image_tag "smiley.jpeg", :size => "50x50", :align => "left" %>
  <% end %>
<div class="title" align="center"><h1>Welcome to Magz's Portfolio Portal</h1></div>
<table class="main_table" >
  <tr>
    <td><div id="comment_form"> <%= render :partial => "comment_form"%></div></td>
    <td></td>
    <td>
      <div id="weather" align: "right">
        <%= image_tag @brooklyn_weather["icon_url"], :align => "right", :float => "top"  %><br>

        Location:   <%= @brooklyn_weather["observation_location"]["city"] %><br>
        Current weather: <%= @brooklyn_weather["icon"].capitalize %> <br>
        Temperature <%= @brooklyn_weather["temp_f"] %> <br>



      </div>
    </td>
  </tr>
  <tr>
    <td><div id="comments"> loading comments....</div></td>
    <td>
    <div style="width: 600px;height: 350px;overflow-y:auto;">
         <p> 1.  As you can see, this displays the current weather where you are.  I first took the ip address acessing this site and fed it into one API, giving me an estimate of the access points zip code (it's not possible for this to be exact, but it gives a good estimate).  I then feed this into a second API, which provides me with some JSON containing the weather information that you see. </p>
        <p> 2.  This is a widget that twitter provides.  I did some modifications to it's sizing and so on and set it to track posts about @topps </p>
        <p> 3.  This pulls from *******, displaying the subject line and sender of any unread emails on that account.  You can test it for yourself by sending an email to that address.</p>
       <p>  4.  I'm particularly proud of this analytics graph.  This site keeps an account in the database of the ip address of every visitor to the site.  From this, it is able to dynamically generate this graph of both the number of visits and the number of unique ip addresses of those visitors.  I've also gone ahead and added the days of the week (again, dynamically generated) to the graph.  The image is being rendered on the fly and does not actually exist in the server's filesystem.  I have however, used low-level caching here so that it only actually queries the database for the number of visits once every hour.</p>
        <p> 5.  This comic is being pulled from dinosaur comics' RSS feed, which you can visit <a href="http://www.rsspect.com/rss/qwantz.xml">here</a>.  I used XML parsing in my controller to parse out only the last entry of the RSS feed.  I then used Jquery to display only the image and not the accompanying text.</p>
        <p> 6.  This comments display refreshes (using AJAX) every ~1 second, so that it always displays the current most recent comments (you can try this out by opening a second window and making a comment).  While this implementation is obviously fairly simple, the same principles apply to any AJAX implementation.</p>
        <p> 7.  This comment form is similarly set up with AJAX.  This allows for user submission of a new comment (which also triggers a refresh of the comments box immediately) without leaving the page.  Again, this is a simple implementation, but creating more complex AJAX implementation is not much more difficult than this.</p>
       <p>  8.  Finally, the frowny face: I unfortunately missed out on the twitter handle @magz.  The account is inactive though, so I set up a function in the controller to check the Twitter API to see if the account is available.  If it is, this would be displaying a smiley face.</p>



      </div>
    </td>
    <td>
      <script charset="utf-8" src="http://widgets.twimg.com/j/2/widget.js"></script>
      <script>
      new TWTR.Widget({
        version: 2,
        type: 'search',
        search: '@topps',
        interval: 30000,
        title: '',
        subject: 'What people are saying about Topps',
        width: 250,
        height: 300,
        theme: {
          shell: {
            background: '#8ec1da',
            color: '#ffffff'
          },
          tweets: {
            background: '#ffffff',
            color: '#444444',
            links: '#1985b5'
          }
        },
        features: {
          scrollbar: false,
          loop: true,
          live: true,
          behavior: 'default'
        }
      }).render().start();
      </script>
  </td>
  </tr>
  <tr height="350px">
    <td width="500px"><div id="dino_comix"><%= @dino_comix %></div></td>
    <td><div id="analytics_graph"><%= image_tag "/analytics_graph", :height => "348", :width => "600"%></div></td>
    <td valign="top">
      <div id="emails">
        <h3> UNREAD EMAILS </h3>
        <% if @emails %>
          <% @emails.each do |e| %>
            From: <%= e[0] %><br>
            Subject: <%= e[1] %> <br><br>
            -----------------------------
          <% end %> 
        <% else %>
          You have no unread emails
        <% end %>
      </div>

    </td>
  </tr>
</table>
<p style="font-family:verdana,arial,sans-serif;font-size:10px;"></p>




<script>
$(document).ready(function(){
  $("#dino_comix").html($("#dino_comix .comic").attr("height", 348).attr("width", 500));
  //so, honestly, it might be better to set these attributes via a css sheet (i.e. set the whole thing to display-none and then set .comic to display)
  //but i wanted to show off a bit of jquerying, so i did that instead
  //in case you're unfamiliar:  what i'm doing here is finding the element(s) with class "comic" within the div with id "dino_comix",
  //modifying it's height and width, and then reassigning the contents of the "dino_comix" div to the result
});









$.periodic.defaults.period = 1000;
$.periodic(function() {
  $.get("main/ajax_get_comments", function(data) {
    $("#comments").html(data["comments_html"]);
});



});



</script>
<!-- border="0" style="background-color:#FFFFFF" width="900px" cellpadding="3" cellspacing="3"
 -->